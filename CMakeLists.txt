CMAKE_MINIMUM_REQUIRED(VERSION 2.8.9)
PROJECT(wilsomprime)

# Use GNUInstallDirs for Unix predefined directories
INCLUDE(GNUInstallDirs)

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin CACHE INTERNAL "" FORCE)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib CACHE INTERNAL "" FORCE)

SET(VERSION "1.0.0")
OPTION(BUILD_WPRIME_OPENCL "Build Wprime - GPU." ON)
OPTION(BUILD_WPRIME "Build Wprime - CPU." ON)
OPTION(BUILD_DOC "Build Documentation." OFF)

# GNU compiler options
IF((CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX) AND NOT CMAKE_COMPILER_IS_MINGW)
	IF(BUILD_SHARED_LIBS AND CMAKE_SIZEOF_VOID_P EQUAL 8)
	ENDIF()

	ADD_DEFINITIONS(-Wall -w -fpermissive -Wfatal-errors)

	IF(CMAKE_BUILD_TYPE STREQUAL "Release")
		MESSAGE(STATUS "Compile for release.")
		ADD_DEFINITIONS(-DNDEBUG)
		ADD_DEFINITIONS(-O3)
		SET(CMAKE_RELEASE TRUE)
		SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -s")
	ELSE()
		MESSAGE(STATUS "Compile for debug.")
		ADD_DEFINITIONS(-D_DEBUG)
		ADD_DEFINITIONS(-g3)
		SET(CMAKE_DEBUG TRUE)
	ENDIF()

ELSEIF(MSVC)
	ADD_DEFINITIONS(/MP)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ENDIF()

IF(BUILD_WPRIME)
	ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/wprime)
ENDIF()

IF(BUILD_WPRIME_OPENCL)
	ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/clwprime)
ENDIF()

IF(BUILD_DOC)
	ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/doc)
ENDIF()